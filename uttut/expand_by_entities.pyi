# Stubs for uttut.expand_by_entities (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

def _aggregate_entities(*args, **kwargs) -> Any: ...
def expand_by_entities(*args, **kwargs) -> Any: ...

class Datum:
    __hash__: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def copy_intents(self, *args, **kwargs) -> Any: ...
    def has_entities(self, *args, **kwargs) -> Any: ...
    def has_intents(self, *args, **kwargs) -> Any: ...
    def has_same_entities_as(self, *args, **kwargs) -> Any: ...
    def has_same_intents_as(self, *args, **kwargs) -> Any: ...
    def has_same_utterance_as(self, *args, **kwargs) -> Any: ...
    def __eq__(self, other) -> Any: ...

class Entity:
    end: Any = ...
    index: Any = ...
    label: Any = ...
    replacements: Any = ...
    start: Any = ...
    value: Any = ...
    __hash__: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    @classmethod
    def from_dict(cls, *args, **kwargs) -> Any: ...
    def n_replacements(self, *args, **kwargs) -> Any: ...
    def no_replacements(self, *args, **kwargs) -> Any: ...
    def to_dict(self, *args, **kwargs) -> Any: ...
    def __eq__(self, other) -> Any: ...
    def __ge__(self, other) -> Any: ...
    def __gt__(self, other) -> Any: ...
    def __le__(self, other) -> Any: ...
    def __lt__(self, other) -> Any: ...
    def __ne__(self, other) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...
